<?php

/**
 * @file
 * Contains automated_testing_kit.module.
 */

/**
 * Implements hook_preprocess_HOOK().
 *
 * Provides nids, vids and tids.
 */
function automated_testing_kit_preprocess_html(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $variables['attributes']['class'][] = 'node-type-' . $node->getType();
    $variables['attributes']['class'][] = 'node-nid-' . $node->id();
  }

  $term = \Drupal::routeMatch()->getParameter('taxonomy_term');
  if ($term instanceof \Drupal\taxonomy\TermInterface) {
    $variables['attributes']['class'][] = 'term-vid-' . $term->bundle();
    $variables['attributes']['class'][] = 'term-tid-' . $term->id();
  }
}

/**
 * Implements hook_preprocess_image().
 *
 * Provides media object ID.
 */
function automated_testing_kit_preprocess_image(&$variables) {

  if (isset($variables['uri'])) {
    $filename = basename($variables['uri']);

    // Clean up the ?itok.
    $filename = parse_url($filename, PHP_URL_PATH);

    $file = \Drupal::entityTypeManager()
      ->getStorage('file')
      ->loadByProperties(['filename' => $filename]);

    if (count($file) == 0) {
      // Strip the webp extension.
      $filename = preg_replace('/\.webp$/', '', $filename);

      $file = \Drupal::entityTypeManager()
      ->getStorage('file')
      ->loadByProperties(['filename' => $filename]);
    }

    if (count($file)) {
      $fileId = array_shift($file)->fid->value;

      // Array of Media entities.
      $mediaArray = \Drupal::entityTypeManager()
        ->getStorage('media')
        ->loadByProperties(['field_media_image' => $fileId]);

      // Might be run during creation so avoid proceeding.
      if (count($mediaArray)) {
        $mediaObj = reset($mediaArray);
        $mediaId = $mediaObj->id();

        if ($mediaObj) {
          // Now add the media ID to your attributes.
          $variables['attributes']['data-media-id'] = $mediaId;
        }
      }
    }
  }

}

/**
 * Implements hook_help().
 */
function automated_testing_kit_help($route_name) {
  $output = '';
  switch ($route_name) {
    // Main module help.
    case 'help.page.automated_testing_kit':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Contains useful functions for end-to-end automated testing. See drupal.org/project/automated_testing_kit for documentation.') . '</p>';

    default:
  }
  return $output;
}
