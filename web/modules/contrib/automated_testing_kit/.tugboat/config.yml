services:
  php:
    # Use PHP 8.x with Apache; this syntax pulls in the latest version of PHP 8.
    image: tugboatqa/php:8.1-apache

    # Set this as the default service. This does a few things:
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the mysql service is done building.
    depends:
      - mysql

    # A set of commands to run while building this service.
    commands:
      # Commands that set up the basic preview infrastructure.
      init:
        - echo "===== Apache/PHP Init ======"
        - alias ll='ls -la'
        - apt-get update && apt-get -y install tree nano python3 python3-pip
        - mysql --help | grep "Default options" -A 1
        - tree -d -L 3

        # Install opcache and enable mod-rewrite.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Link the document root to the expected path. This example links
        # /var/lib/tugboat/web to the docroot of the Apache server (/var/www/html).
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

        # Increase php memory limit to 256M.
        - echo "memory_limit = 256M" >> /usr/local/etc/php/conf.d/my-php.ini

        # enable display errors.
        - echo "display_errors = On" >> /usr/local/etc/php/conf.d/my-php.ini

        # Enable colored terminal and some aliases.
        - sed -e '9,13 s/#//' -i ~/.bashrc
        - sed -e '16,19 s/#//' -i ~/.bashrc

        # Move composer into position.
        - mv module_support/development/composer.json .

        # Copy automated_testing_kit into position.
        - mkdir -p web/modules/contrib/automated_testing_kit
        - rsync -av --remove-source-files --exclude='web' --exclude="composer.json" . web/modules/contrib/automated_testing_kit/

        # Delete all empty directories.
        - find . -type d -empty -delete

      update:
        - echo "===== Apache/PHP Update ====="

        # Import the database.
        # - zcat project/database/performant-labs_dev.sql.gz | mysql -h mysql -utugboat -ptugboat tugboat

        # Download core + contrib modules.
        - composer update --optimize-autoloader

        # Set file permissions such that Drupal will not complain
        - mkdir -p "${DOCROOT}/sites/default/files"
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;
        - mkdir -p "${DOCROOT}/sites/default/files-private"
        - chgrp -R www-data "${DOCROOT}/sites/default/files-private"
        - find "${DOCROOT}/sites/default/files-private" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files-private" -type f -exec chmod 0664 {} \;

        # Use the Tugboat-specific Drupal settings.
        - cp "${TUGBOAT_ROOT}/web/modules/contrib/automated_testing_kit/.tugboat/settings.tugboat.php" "${DOCROOT}/sites/default/settings.local.php"

        # Create the website.
        - vendor/bin/drush site:install --debug --yes --db-url=mysql://tugboat:tugboat@mysql/tugboat --account-name=tugboat --account-pass=tugboat --site-name="Automated Testing Kit Tester"

        # Enable the modules we need.
        #- ${TUGBOAT_ROOT}/scripts/promote-admins.sh
        - vendor/bin/drush en -y qa_accounts admin_toolbar coffee symfony_mailer webform

        # Set up error capture.
        - touch /var/log/php-error.log && chown www-data:www-data /var/log/php-error.log
        - echo "log_errors = On"  >> /usr/local/etc/php/conf.d/my-php.ini
        - echo "error_log = /var/log/php-error.log" >> /usr/local/etc/php/conf.d/my-php.ini
        - echo "error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT" >> /usr/local/etc/php/conf.d/my-php.ini

      # Only step that executes on new PR or Tugboat builds from base previews.
      build:
        - echo "===== Apache/PHP Build ====="

        # Set up GHA to run the tests.

      # Runs once all services are running, runs on rebuild.
      online:
        # Actually run the tests now.

  mysql:
    image: tugboatqa/mysql:8-debian

    commands:
      init:
        - echo '===== mySQL Service Init ======'

        # Increase the allowed packet size to 512MB.
        - mysql -e "SET GLOBAL max_allowed_packet=2147483648;"
        - mysql --help | grep "Default options" -A 1

        # Ensure this packet size persists even if MySQL restarts.
        - echo "max_allowed_packet=2147483648" >> /etc/mysql/tugboat.cnf
